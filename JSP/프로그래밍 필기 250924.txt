JME	:	Micro			IOT
↓
JSE	:	Standard		기본(로컬)
↓
JEE	:	Enterprise		서버			서블릿, EJB(enterprise java bean){서버통신용}
↓
Cloud, MSA

Servlet이란?
server + applet~~		html이랑 class를 실행할 수 있음
applet은 로컬에서 만드는거	

1. Servlet
2. Req 콜링: IP, Parameter
3. Resp 응답: Test, JS
4. Redirect: 클라이언트가 보낸 req를 튕겨내서 방향을 다른쪽으로 재설정

5. HTM, CSS 봐라
6. 

HTTP란?(Hyper Text Transfer Protocol)	HTTPS는 암호화한 HTTP
암호화한 방법은 보내는쪽에서 알고리즘을 통해 인코딩해서 key값을 보내면
받는쪽도 알고리즘을 통해 key로 디코딩 하는거임 그리고 인증기간도 필요

어젠 localhost8080:프로젝트이름/ghi?메세지=내용&닉=sasaki	이런걸 했음

	<body>
		<form method="post">
				<input type="text" placeholder="서버로 전송할 메시지를 입력하세용">
				<input type="button" value="Input Button"><br>
				<input type="submit" value="Input Submit"><br>
				<button>Button Tag</button>
			</form>
	</body>

결과물:
메세지입력창
인풋버튼
인풋 서브밋
버튼태그

인풋을 눌러도 아무 변화 없고 나머지버튼은 새로고침되는 이유 -> 인풋은 따로 코딩을 더 해줘야하고
나머지는 자동이긴 한데 목표가 없어서 그냥 자기페이지로 돌아오는거임

메소드포스트에 action="/SERVLET_PROJECT(프로젝트이름)/" 하면댐

Request 요청	Response 응답

BOM: 브라우저 객체
DOM: 다큐먼트 객체

스크립트에서 일반적으로 문자를 작은따옴표로 잡는다('	')

예전엔 var타입을 많이 썻는데 문제가 많아서 요즘은 let를 쓴다
체크용으로 console.log(inputArr[1])을 써보셈

브라우저에서 f12누르면 개발자창 열림
거기서 콘솔 소스 보면서 디버깅하면 댐

소스옆에 줄번호 누르면 브레이크 포인트 잡힌다
버튼같은거 눌러서 진행시키고 f10으로 다음라인으로 진행하면 댐

inputArr.addEventListener('click', function(){});;	이건 클릭에 대한 센서를 달겟다는거임

자바스크립트의 this는 3가지가 있음
console.log(this);는 위 코드의 이벤트가 일어난 객체가 this가 된다고 함

<--	--> 이건 주석인데 자바에선 안대는듯?
/*	*/	이게 베이직한 주석임

let inputArr = document.getElementsByTagName('input');
				//console.log(inputArr[1]);
				inputArr[1].addEventListener('click', function(){
					//console.log(this);
					
				let formArr = document.getElementsByTagName('form');
				formArr[0].submit();
				
				});
이건 처음에 햇던거

document.getElementById('btn1').addEventListner('click',function(){
					document.getElementById('frm1').submit();
				});
이건 더 간단한거 두번째
대신 버튼에 id를 지정해줘야한다이(id='btn1')

더 간단한거는 document.querySelector("#btn1");
여기서 #은 id와 같다
document.querySelector("#btn1").addEventListner('click',function(){
				document.querySelector('#frm1').submit();
			} 이게 완성버전

처음만든게 성능은 가장 낫다


자바스크립트 퀴즈)
1. 메시지 입력을 안한 경우 경고 alert을 표시하세용
2. 입력이 되어있을 경우에만 폼을 전송하세요요용
제한시간은 점심먹기전에
3. 1번의 alert를 이미지로 표시하세용

브라우저 f12에서 network로 들어가면 통신 히스토리가 보인다
get방식은 주소창에 ?가 뜨는데 post방식은 뜨지 않는다

flush	:	버퍼에 있는걸 내보낸다

왠만하면 post방식으로 하고 링크같은거만 뭔가까먹은걸로 하기


백업용 바디 통째로 복사(에러남)

<body>
		<form method="post" action="/SERVLET_PROJECT/jkl">
				<img src="../images/alert.png" style="display:none;">
				<input type="text" name="msg" placeholder="내용"><br>
				<input type="button" id="btn1" value="Input Button"><br>
				<input type="submit" value="Input Submit"><br>
				<button>Button Tag</button>
			</form>
			
			<script>
			
			//마지막에만든 가장간단한거
			document.querySelector("#btn1").addEventListner('click',function(){
				document.querySelector('#frm1').submit();
				
			});
			
			/*
			//두번째로 만든 간단한거
				document.getElementById('btn1').addEventListner('click',function(){
					document.getElementById('frm1').submit();
				});
			
			
				
				//처음만든 가장 베이직하고 빠른거
				let inputArr = document.getElementsByTagName('input');
				console.log(inputArr[1]);
				inputArr[1].addEventListener('click', function(){
					console.log(this);
					
				let formArr = document.getElementsByTagName('form');
				formArr[0].submit();
				
				});
				*/
			</script>
	</body>

	여기까지!


Servlet	Model1

JSP		Model1.5

MVC		Model2



JSP란?

servlet의 역할을 하는 servlet임 이게 무슨소리냐
지혼자서도 페이지를 만들수 잇다는 으미임 알아서 컴파일되고 알아서 클래스되고 그럼
Java로 만든 Server Page
즉 우리가 직접짜야하던 servlet을 얘가 알아서 짠다는거임

만약 <!DOCTYPE html>가 없으면 왠만하면 붙여주는게 좋음


문제발생!
새로고침할때마다 null값 혹은 원래 데이터가 복사된 유령리스트가 추가됨!
이걸 막으려면 분리를 해줘야함

오늘의 핵심 매커니즘: post, forward(어제는 redirect)

forward란? 요청한 정보를 그대로 다른친구에게 디스패치 하는거다
application은 서버가 돌아가는동안 유지되지만 종료되면 사라짐

문제를 고쳣다
list_add에서 set하고
list_music에서 get하면 됨

request는 response받으면 사라짐(like 지역변수)
반면 application은 서버가 죽을때까진 살아있음