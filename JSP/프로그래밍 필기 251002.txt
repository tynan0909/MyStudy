11-12. 세션&쿠키

세션은 클라이언트와 웹서버간 상태를 지속적으로 유지하는 방법이다.
원래는 http로 연결성이 없어 타임아웃하면 끊기지만
세션과 쿠키를 이용하면 연결상태를 유지할 수 있다.

쿠키는 서버가 클라이언트한테 주는데
이걸 딱히 설정하지 않아도 쿠키가 날라온다
response를 통해서 날라오고 이름은 JSESSIONID

쓰는 이유는 클라이언트를 기억하기 위해서 주는 이름표같은거임

세션&쿠키
서버가 응답을 줄때 쿠키도 같이 보내줌
서버에서 자동생성

서버에서만 주는건 아니고
클라이언트에서도 줄수 잇다 ex)오늘 이 팝업창 안보기
즉 자바스크립트, 자바 둘다 쿠키를 만들 수 있다.

구글에서 맞춤형광고 띄우는 원리도 쿠키를 감지해서
맞는걸 띄우는거임

세션은 공유객체 -> 어떤값을 저장할수 잇음(그사람이 가진 쿠키에 대한 정보를 저장) 타임아웃시간 20~30분


쿠키 정리
쿠키란 웹사이트에 의해 유저의 정보를 저장하는 것이다. 
서버와 데이터를 공유하는 용도로 사용되며 데이터의 유효기간 지정이 가능하다. (ex: 1시간 뒤, 하루 뒤) 
단점으로는 4KB 데이터 저장 제한으로 사이즈가 매우작고, 
서버에 매 HTTP 요청으로 데이터 전달 낭비가 발생한다는 점이다. 
또한 문자열 형태만 저장이 가능하다. 팝업창 다시 보지 않음 기능에 사용된다.

로컬스토리지 정리
로컬 스토리지는 가볍지만 기능이 많지 않고 단순히 key(키):value(값)을 JavaScript 객체 타입으로 저장하는 기능만 있다. 
로컬 스토리지에 저장된 데이터는 직접 제거하기 전까지 영구적으로 존재한다. 
최대 저장용량은 5~10MB로 제한되어 있지만 만료기간 없이 저장이 가능하여 자동 로그인, 다크 모드에 사용된다.

세션스토리지 정리
세션 스토리지는 로컬 스토리지와 달리 만료기간이 있어 브라우저를 종료하거나 새 탭을 열 때 데이터가 초기화가 된다. 
(같은 탭에서 새로고침 시에는 데이터가 유지됨) 즉, 로컬 스토리지와 세션 스토리지의 차이는 바로 영구성이다. 
자동 임시 저장 용도로 쓰이는데 예를 들어 입력폼 정보 저장, 비로그인 장바구니, 글쓰기 도중 내용 복구하기가 있다. 
사용법은 위의 로컬 스토리지와 동일하다.


※ 쿠키와 세션은 같이 있어야 한다 ※

클 -> request -> WAS -> response(쿠키첨가) -> 클
클라이언트가 쿠키를 갖고 잇으면 그걸보고 ip가 바껴도
인식할수 잇는거임
server안에 쿠키번호에 해당하는 클라이언트의 정보를 갖고잇음
로그인이 맞는 암호 입력하면 그 회원이라고 아는거랑 같음
로그아웃은 그 쿠키를 지우는거고

다른사람이 쿠키를 탈취하면 똑같이 로그인할 수 있으니까
회원정보 조회할때 다시 물어보는거임(위험하니까)

